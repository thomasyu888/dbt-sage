{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/catalog/v1.json", "dbt_version": "1.10.11", "generated_at": "2025-09-22T06:46:49.983493Z", "invocation_id": "da1d3b25-410f-4c98-a183-da70117150d3", "invocation_started_at": "2025-09-22T06:46:19.188409Z", "env": {}}, "nodes": {"model.synapse.int_nodes_filtered_to_latest": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_LATEST", "name": "INT_NODES_FILTERED_TO_LATEST", "database": "DBT_TEST", "comment": "This table, indexed by ID, contains the latest snapshot of Synapse nodes (projects, files, folders, tables, etc.). It is derived from NODESNAPSHOTS raw data and provides deduplicated node information. The table is refreshed daily and contains only the most recent node entries for each ID from the past 30 days. Each row represents a specific Synapse node with its current state and metadata.", "owner": "SYSADMIN"}, "columns": {"NODE_ID": {"type": "NUMBER", "index": 1, "name": "NODE_ID", "comment": "The primary key for this table"}, "CHANGE_TYPE": {"type": "TEXT", "index": 2, "name": "CHANGE_TYPE", "comment": "change type"}, "CHANGE_USER_ID": {"type": "NUMBER", "index": 3, "name": "CHANGE_USER_ID", "comment": "The unique identifier of the user who made the change to the node."}, "BENEFACTOR_NODE_ID": {"type": "NUMBER", "index": 4, "name": "BENEFACTOR_NODE_ID", "comment": "The identifier of the ancestor node providing permissions (can be the node itself)."}, "PROJECT_NODE_ID": {"type": "NUMBER", "index": 5, "name": "PROJECT_NODE_ID", "comment": "The project where the node resides. Empty for DELETE changes."}, "PARENT_NODE_ID": {"type": "NUMBER", "index": 6, "name": "PARENT_NODE_ID", "comment": "The unique identifier of the parent in the node hierarchy."}, "NODE_TYPE": {"type": "TEXT", "index": 7, "name": "NODE_TYPE", "comment": "The type of the node (project, folder, file, table, link, entityview, dockerrepo, submissionview, dataset, datasetcollection, materializedview, virtualtable)."}, "CREATED_ON": {"type": "TIMESTAMP_NTZ", "index": 8, "name": "CREATED_ON", "comment": "The creation time of the node."}, "CREATED_BY_USER_ID": {"type": "NUMBER", "index": 9, "name": "CREATED_BY_USER_ID", "comment": "The unique identifier of the user who created the node."}, "MODIFIED_ON": {"type": "TIMESTAMP_NTZ", "index": 10, "name": "MODIFIED_ON", "comment": "The most recent change time of the node."}, "MODIFIED_BY_USER_ID": {"type": "NUMBER", "index": 11, "name": "MODIFIED_BY_USER_ID", "comment": "The unique identifier of the user who last modified the node."}, "VERSION_NUMBER": {"type": "NUMBER", "index": 12, "name": "VERSION_NUMBER", "comment": "The version of the node on which the change occurred, if applicable."}, "FILE_HANDLE_ID": {"type": "NUMBER", "index": 13, "name": "FILE_HANDLE_ID", "comment": "The unique identifier of the file handle if the node is a file, null otherwise."}, "NODE_NAME": {"type": "TEXT", "index": 14, "name": "NODE_NAME", "comment": "The name of the node."}, "IS_PUBLIC": {"type": "BOOLEAN", "index": 15, "name": "IS_PUBLIC", "comment": "If true, READ permission is granted to all users (including anonymous) at snapshot time."}, "IS_CONTROLLED_ACCESS": {"type": "BOOLEAN", "index": 16, "name": "IS_CONTROLLED_ACCESS", "comment": "If true, an access requirement managed by the ACT is set on the node."}, "IS_RESTRICTED_ACCESS": {"type": "BOOLEAN", "index": 17, "name": "IS_RESTRICTED_ACCESS", "comment": "If true, a terms-of-use access requirement is set on the node."}, "EFFECTIVE_ACCESS_REQUIREMENTS": {"type": "VARIANT", "index": 18, "name": "EFFECTIVE_ACCESS_REQUIREMENTS", "comment": "List of access requirement IDs that apply to the entity at the time of the snapshot."}, "ANNOTATIONS": {"type": "VARIANT", "index": 19, "name": "ANNOTATIONS", "comment": "JSON representation of user-assigned entity annotations."}, "DERIVED_ANNOTATIONS": {"type": "VARIANT", "index": 20, "name": "DERIVED_ANNOTATIONS", "comment": "JSON representation of schema-derived entity annotations."}, "VERSION_COMMENT": {"type": "TEXT", "index": 21, "name": "VERSION_COMMENT", "comment": "A short description assigned to this node version."}, "VERSION_LABEL": {"type": "TEXT", "index": 22, "name": "VERSION_LABEL", "comment": "A short label assigned to this node version."}, "ALIAS": {"type": "TEXT", "index": 23, "name": "ALIAS", "comment": "Alias assigned to a project entity if present."}, "ACTIVITY_ID": {"type": "NUMBER", "index": 24, "name": "ACTIVITY_ID", "comment": "Reference to the activity ID assigned to the node."}, "COLUMN_MODEL_IDS": {"type": "VARIANT", "index": 25, "name": "COLUMN_MODEL_IDS", "comment": "List of column IDs assigned to the schema (for tables, views, etc.)."}, "SCOPE_IDS": {"type": "VARIANT", "index": 26, "name": "SCOPE_IDS", "comment": "List of entity IDs included in the scope (for entity/submission views)."}, "ITEMS": {"type": "VARIANT", "index": 27, "name": "ITEMS", "comment": "List of entity references included in the scope (for dataset, dataset collections)."}, "REFERENCE": {"type": "VARIANT", "index": 28, "name": "REFERENCE", "comment": "Reference to the linked target (for Link entities)."}, "IS_SEARCH_ENABLED": {"type": "BOOLEAN", "index": 29, "name": "IS_SEARCH_ENABLED", "comment": "For table-like entities (EntityView, MaterializedView, etc.), whether full-text search is enabled."}, "DEFINING_SQL": {"type": "TEXT", "index": 30, "name": "DEFINING_SQL", "comment": "For SQL-driven tables (MaterializedView, VirtualTable), the underlying SQL query."}, "INTERNAL_ANNOTATIONS": {"type": "VARIANT", "index": 31, "name": "INTERNAL_ANNOTATIONS", "comment": "JSON of internal annotations (dataset checksum, size, count, etc.)."}, "VERSION_HISTORY": {"type": "VARIANT", "index": 32, "name": "VERSION_HISTORY", "comment": "List of entity versions at snapshot time."}, "PROJECT_STORAGE_USAGE": {"type": "VARIANT", "index": 33, "name": "PROJECT_STORAGE_USAGE", "comment": "For project nodes, includes storage usage data per storage location."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 8162304, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 79329, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:31UTC", "include": true, "description": "The timestamp for last update/change"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "model.synapse.int_nodes_filtered_to_latest"}, "model.synapse.stg_synapse__filesnapshots": {"metadata": {"type": "VIEW", "schema": "SYNAPSE_STAGING", "name": "STG_SYNAPSE__FILESNAPSHOTS", "database": "DBT_TEST", "comment": "Filesnapshots renamed column headers", "owner": "SYSADMIN"}, "columns": {"CHANGE_TYPE": {"type": "TEXT", "index": 1, "name": "CHANGE_TYPE", "comment": "The type of change that occurred on the file handle, e.g., CREATE, UPDATE, DELETE."}, "CHANGE_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 2, "name": "CHANGE_TIMESTAMP", "comment": "The time when the change (created/updated/deleted) on the file handle is pushed to the queue for snapshotting."}, "CHANGE_USER_ID": {"type": "NUMBER", "index": 3, "name": "CHANGE_USER_ID", "comment": "The unique identifier of the user who made the change to the file handle."}, "SNAPSHOT_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 4, "name": "SNAPSHOT_TIMESTAMP", "comment": "The time when the snapshot was taken (usually after the change happened)."}, "FILE_HANDLE_ID": {"type": "NUMBER", "index": 5, "name": "FILE_HANDLE_ID", "comment": "The unique identifier of the file handle (ID). Primary key for this table."}, "CREATED_BY_USER_ID": {"type": "NUMBER", "index": 6, "name": "CREATED_BY_USER_ID", "comment": "The unique identifier of the user who created the file handle."}, "CREATED_ON": {"type": "TIMESTAMP_NTZ", "index": 7, "name": "CREATED_ON", "comment": "The creation timestamp of the file handle."}, "MODIFIED_ON": {"type": "TIMESTAMP_NTZ", "index": 8, "name": "MODIFIED_ON", "comment": "The most recent change time of the file handle."}, "CONCRETE_TYPE": {"type": "TEXT", "index": 9, "name": "CONCRETE_TYPE", "comment": "The type of the file handle (S3FileHandle, ProxyFileHandle, ExternalFileHandle, ExternalObjectStoreFileHandle, GoogleCloudFileHandle)."}, "CONTENT_MD5": {"type": "TEXT", "index": 10, "name": "CONTENT_MD5", "comment": "The MD5 hash (using MD5 algorithm) of the file referenced by the file handle."}, "CONTENT_TYPE": {"type": "TEXT", "index": 11, "name": "CONTENT_TYPE", "comment": "Metadata about the content of the file, e.g., application/json, application/zip, application/octet-stream."}, "FILE_NAME": {"type": "TEXT", "index": 12, "name": "FILE_NAME", "comment": "The name of the file referenced by the file handle."}, "STORAGE_LOCATION_ID": {"type": "NUMBER", "index": 13, "name": "STORAGE_LOCATION_ID", "comment": "The identifier of the environment where the physical files are stored."}, "CONTENT_SIZE": {"type": "NUMBER", "index": 14, "name": "CONTENT_SIZE", "comment": "The size of the file referenced by the file handle."}, "BUCKET": {"type": "TEXT", "index": 15, "name": "BUCKET", "comment": "The bucket where the file is physically stored (applicable for S3 and GCP, otherwise empty)."}, "KEY": {"type": "TEXT", "index": 16, "name": "KEY", "comment": "The key name that uniquely identifies the object (file) in the bucket."}, "PREVIEW_FILE_HANDLE_ID": {"type": "NUMBER", "index": 17, "name": "PREVIEW_FILE_HANDLE_ID", "comment": "The identifier of the file handle that contains a preview of the file referenced by this file handle."}, "IS_PREVIEW": {"type": "BOOLEAN", "index": 18, "name": "IS_PREVIEW", "comment": "If true, the file referenced by this file handle is a preview of another file."}, "STATUS": {"type": "TEXT", "index": 19, "name": "STATUS", "comment": "The availability status of the file referenced by the file handle (AVAILABLE, UNLINKED, ARCHIVED)."}, "SNAPSHOT_DATE": {"type": "DATE", "index": 20, "name": "SNAPSHOT_DATE", "comment": "Partitioning field. Derived from snapshot_timestamp for cost-effective queries."}}, "stats": {"has_stats": {"id": "has_stats", "label": "Has Stats?", "value": false, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "model.synapse.stg_synapse__filesnapshots"}, "model.synapse.stg_synapse__nodesnapshots": {"metadata": {"type": "VIEW", "schema": "SYNAPSE_STAGING", "name": "STG_SYNAPSE__NODESNAPSHOTS", "database": "DBT_TEST", "comment": "Nodesnapshots renamed column headers", "owner": "SYSADMIN"}, "columns": {"CHANGE_TYPE": {"type": "TEXT", "index": 1, "name": "CHANGE_TYPE", "comment": "The type of change that occurred on the node, e.g., CREATE, UPDATE, DELETE."}, "CHANGE_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 2, "name": "CHANGE_TIMESTAMP", "comment": "The time when the change (created/updated/deleted) on the node is pushed to the queue for snapshotting."}, "CHANGE_USER_ID": {"type": "NUMBER", "index": 3, "name": "CHANGE_USER_ID", "comment": "The unique identifier of the user who made the change to the node."}, "SNAPSHOT_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 4, "name": "SNAPSHOT_TIMESTAMP", "comment": "The time when the snapshot was taken (usually after the change happened)."}, "NODE_ID": {"type": "NUMBER", "index": 5, "name": "NODE_ID", "comment": "The unique identifier of the node (ID)."}, "BENEFACTOR_NODE_ID": {"type": "NUMBER", "index": 6, "name": "BENEFACTOR_NODE_ID", "comment": "The identifier of the ancestor node providing permissions (can be the node itself)."}, "PROJECT_NODE_ID": {"type": "NUMBER", "index": 7, "name": "PROJECT_NODE_ID", "comment": "The project where the node resides. Empty for DELETE changes."}, "PARENT_NODE_ID": {"type": "NUMBER", "index": 8, "name": "PARENT_NODE_ID", "comment": "The unique identifier of the parent in the node hierarchy."}, "NODE_TYPE": {"type": "TEXT", "index": 9, "name": "NODE_TYPE", "comment": "The type of the node (project, folder, file, table, link, entityview, dockerrepo, submissionview, dataset, datasetcollection, materializedview, virtualtable)."}, "CREATED_ON": {"type": "TIMESTAMP_NTZ", "index": 10, "name": "CREATED_ON", "comment": "The creation time of the node."}, "CREATED_BY_USER_ID": {"type": "NUMBER", "index": 11, "name": "CREATED_BY_USER_ID", "comment": "The unique identifier of the user who created the node."}, "MODIFIED_ON": {"type": "TIMESTAMP_NTZ", "index": 12, "name": "MODIFIED_ON", "comment": "The most recent change time of the node."}, "MODIFIED_BY_USER_ID": {"type": "NUMBER", "index": 13, "name": "MODIFIED_BY_USER_ID", "comment": "The unique identifier of the user who last modified the node."}, "VERSION_NUMBER": {"type": "NUMBER", "index": 14, "name": "VERSION_NUMBER", "comment": "The version of the node on which the change occurred, if applicable."}, "FILE_HANDLE_ID": {"type": "NUMBER", "index": 15, "name": "FILE_HANDLE_ID", "comment": "The unique identifier of the file handle if the node is a file, null otherwise."}, "NODE_NAME": {"type": "TEXT", "index": 16, "name": "NODE_NAME", "comment": "The name of the node."}, "IS_PUBLIC": {"type": "BOOLEAN", "index": 17, "name": "IS_PUBLIC", "comment": "If true, READ permission is granted to all users (including anonymous) at snapshot time."}, "IS_CONTROLLED_ACCESS": {"type": "BOOLEAN", "index": 18, "name": "IS_CONTROLLED_ACCESS", "comment": "If true, an access requirement managed by the ACT is set on the node."}, "IS_RESTRICTED_ACCESS": {"type": "BOOLEAN", "index": 19, "name": "IS_RESTRICTED_ACCESS", "comment": "If true, a terms-of-use access requirement is set on the node."}, "SNAPSHOT_DATE": {"type": "DATE", "index": 20, "name": "SNAPSHOT_DATE", "comment": "Partitioning field. Derived from snapshot_timestamp for cost-effective queries."}, "EFFECTIVE_ACCESS_REQUIREMENTS": {"type": "VARIANT", "index": 21, "name": "EFFECTIVE_ACCESS_REQUIREMENTS", "comment": "List of access requirement IDs that apply to the entity at the time of the snapshot."}, "ANNOTATIONS": {"type": "VARIANT", "index": 22, "name": "ANNOTATIONS", "comment": "JSON representation of user-assigned entity annotations."}, "DERIVED_ANNOTATIONS": {"type": "VARIANT", "index": 23, "name": "DERIVED_ANNOTATIONS", "comment": "JSON representation of schema-derived entity annotations."}, "VERSION_COMMENT": {"type": "TEXT", "index": 24, "name": "VERSION_COMMENT", "comment": "A short description assigned to this node version."}, "VERSION_LABEL": {"type": "TEXT", "index": 25, "name": "VERSION_LABEL", "comment": "A short label assigned to this node version."}, "ALIAS": {"type": "TEXT", "index": 26, "name": "ALIAS", "comment": "Alias assigned to a project entity if present."}, "ACTIVITY_ID": {"type": "NUMBER", "index": 27, "name": "ACTIVITY_ID", "comment": "Reference to the activity ID assigned to the node."}, "COLUMN_MODEL_IDS": {"type": "VARIANT", "index": 28, "name": "COLUMN_MODEL_IDS", "comment": "List of column IDs assigned to the schema (for tables, views, etc.)."}, "SCOPE_IDS": {"type": "VARIANT", "index": 29, "name": "SCOPE_IDS", "comment": "List of entity IDs included in the scope (for entity/submission views)."}, "ITEMS": {"type": "VARIANT", "index": 30, "name": "ITEMS", "comment": "List of entity references included in the scope (for dataset, dataset collections)."}, "REFERENCE": {"type": "VARIANT", "index": 31, "name": "REFERENCE", "comment": "Reference to the linked target (for Link entities)."}, "IS_SEARCH_ENABLED": {"type": "BOOLEAN", "index": 32, "name": "IS_SEARCH_ENABLED", "comment": "For table-like entities (EntityView, MaterializedView, etc.), whether full-text search is enabled."}, "DEFINING_SQL": {"type": "TEXT", "index": 33, "name": "DEFINING_SQL", "comment": "For SQL-driven tables (MaterializedView, VirtualTable), the underlying SQL query."}, "INTERNAL_ANNOTATIONS": {"type": "VARIANT", "index": 34, "name": "INTERNAL_ANNOTATIONS", "comment": "JSON of internal annotations (dataset checksum, size, count, etc.)."}, "VERSION_HISTORY": {"type": "VARIANT", "index": 35, "name": "VERSION_HISTORY", "comment": "List of entity versions at snapshot time."}, "PROJECT_STORAGE_USAGE": {"type": "VARIANT", "index": 36, "name": "PROJECT_STORAGE_USAGE", "comment": "For project nodes, includes storage usage data per storage location."}}, "stats": {"has_stats": {"id": "has_stats", "label": "Has Stats?", "value": false, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "model.synapse.stg_synapse__nodesnapshots"}, "model.synapse.stg_synapse__userprofilesnapshots": {"metadata": {"type": "VIEW", "schema": "SYNAPSE_STAGING", "name": "STG_SYNAPSE__USERPROFILESNAPSHOTS", "database": "DBT_TEST", "comment": "This table contains snapshots of user-profiles. Snapshots are taken when user profiles are created or modified. Note: Snapshots are also taken periodically and independently of the changes. The snapshot_timestamp records when the snapshot was taken.", "owner": "SYSADMIN"}, "columns": {"CHANGE_TYPE": {"type": "TEXT", "index": 1, "name": "CHANGE_TYPE", "comment": "The type of change that occurred to the user profile, e.g., CREATE, UPDATE (Snapshotting does not capture DELETE change)."}, "CHANGE_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 2, "name": "CHANGE_TIMESTAMP", "comment": "The time when any change to the user profile was made (e.g. create or update)."}, "CHANGE_USER_ID": {"type": "NUMBER", "index": 3, "name": "CHANGE_USER_ID", "comment": "The unique identifier of the user who made the change to the user profile."}, "SNAPSHOT_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 4, "name": "SNAPSHOT_TIMESTAMP", "comment": "The time when the snapshot was taken (It is usually after the change happened)."}, "USER_ID": {"type": "NUMBER", "index": 5, "name": "USER_ID", "comment": "The unique identifier of the user."}, "USER_NAME": {"type": "TEXT", "index": 6, "name": "USER_NAME", "comment": "The Synapse username."}, "FIRST_NAME": {"type": "TEXT", "index": 7, "name": "FIRST_NAME", "comment": "The first name of the user."}, "LAST_NAME": {"type": "TEXT", "index": 8, "name": "LAST_NAME", "comment": "The last name of the user."}, "EMAIL": {"type": "TEXT", "index": 9, "name": "EMAIL", "comment": "The primary email of the user."}, "LOCATION": {"type": "TEXT", "index": 10, "name": "LOCATION", "comment": "The location of the user."}, "COMPANY": {"type": "TEXT", "index": 11, "name": "COMPANY", "comment": "The company where the user works."}, "POSITION": {"type": "TEXT", "index": 12, "name": "POSITION", "comment": "The position of the user in the company."}, "SNAPSHOT_DATE": {"type": "DATE", "index": 13, "name": "SNAPSHOT_DATE", "comment": "The data is partitioned for fast and cost effective queries. The snapshot_timestamp field is converted into a date and stored in the snapshot_date field for partitioning. The date should be used as a condition (WHERE CLAUSE) in the queries."}, "CREATED_ON": {"type": "TIMESTAMP_NTZ", "index": 14, "name": "CREATED_ON", "comment": "The creation time of the user profile."}, "IS_TWO_FACTOR_AUTH_ENABLED": {"type": "BOOLEAN", "index": 15, "name": "IS_TWO_FACTOR_AUTH_ENABLED", "comment": "Indicates if the user had two factor authentication enabled when the snapshot was captured."}, "INDUSTRY": {"type": "TEXT", "index": 16, "name": "INDUSTRY", "comment": "The industry/discipline that this person is associated with."}, "TOS_AGREEMENTS": {"type": "VARIANT", "index": 17, "name": "TOS_AGREEMENTS", "comment": "Contains the list of all the term of service that the user agreed to, with their agreed on date and version."}}, "stats": {"has_stats": {"id": "has_stats", "label": "Has Stats?", "value": false, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "model.synapse.stg_synapse__userprofilesnapshots"}, "model.synapse.stg_synapse__filedownload_events": {"metadata": {"type": "VIEW", "schema": "SYNAPSE_STAGING", "name": "STG_SYNAPSE__FILEDOWNLOAD_EVENTS", "database": "DBT_TEST", "comment": "Dynamic table containing the most recent file download events. Indexed by `USER_ID`, `ASSOCIATION_OBJECT_ID`, `ASSOCIATION_OBJECT_TYPE`, and `RECORD_DATE`. Data is partitioned by record date for fast and cost-effective queries.\n", "owner": "SYSADMIN"}, "columns": {"TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 1, "name": "TIMESTAMP", "comment": "The time when the file download event is pushed to the queue for recording, after generating the pre-signed URL.\n"}, "USER_ID": {"type": "NUMBER", "index": 2, "name": "USER_ID", "comment": "PRIMARY KEY (Composite). The ID of the user who downloaded the file.\n"}, "PROJECT_NODE_ID": {"type": "NUMBER", "index": 3, "name": "PROJECT_NODE_ID", "comment": "Unique identifier of the project where the downloaded entity resides. Applicable only for FileEntity and TableEntity.\n"}, "FILE_HANDLE_ID": {"type": "NUMBER", "index": 4, "name": "FILE_HANDLE_ID", "comment": "Unique identifier of the file handle.\n"}, "DOWNLOADED_FILE_HANDLE_ID": {"type": "NUMBER", "index": 5, "name": "DOWNLOADED_FILE_HANDLE_ID", "comment": "Unique identifier of the zip file handle containing the downloaded file when requested as a zip/package, otherwise the ID of the file handle itself.\n"}, "ASSOCIATION_OBJECT_ID": {"type": "NUMBER", "index": 6, "name": "ASSOCIATION_OBJECT_ID", "comment": "PRIMARY KEY (Composite). Unique identifier of the Synapse object (without \"syn\" prefix) that wraps the file.\n"}, "ASSOCIATION_OBJECT_TYPE": {"type": "TEXT", "index": 7, "name": "ASSOCIATION_OBJECT_TYPE", "comment": "PRIMARY KEY (Composite). Type of the Synapse object that wraps the file, e.g., FileEntity, TableEntity, WikiAttachment, WikiMarkdown, UserProfileAttachment, MessageAttachment, TeamAttachment.\n"}, "STACK": {"type": "TEXT", "index": 8, "name": "STACK", "comment": "The stack (prod, dev) on which the download request was processed.\n"}, "INSTANCE": {"type": "TEXT", "index": 9, "name": "INSTANCE", "comment": "The version of the stack that processed the download request.\n"}, "RECORD_DATE": {"type": "DATE", "index": 10, "name": "RECORD_DATE", "comment": "PRIMARY KEY (Composite). Partitioning column derived from TIMESTAMP for efficient queries. Should be used in WHERE clauses.\n"}, "SESSION_ID": {"type": "TEXT", "index": 11, "name": "SESSION_ID", "comment": "UUID assigned to the API request that triggered this download. Can be joined with `processedaccessrecord` on `session_id` to retrieve additional metadata.\n"}, "ROW_NUM": {"type": "NUMBER", "index": 12, "name": "ROW_NUM", "comment": "Indexed by `USER_ID`, `ASSOCIATION_OBJECT_ID`, `ASSOCIATION_OBJECT_TYPE`, and `RECORD_DATE` to define a download event. A value of 1 is the \"first\" download event.\n"}}, "stats": {"has_stats": {"id": "has_stats", "label": "Has Stats?", "value": false, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "model.synapse.stg_synapse__filedownload_events"}, "model.synapse.int_files_filtered_to_latest": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_LATEST", "name": "INT_FILES_FILTERED_TO_LATEST", "database": "DBT_TEST", "comment": "This dynamic table, indexed by the ID column, contains the most recent snapshot of file handles.", "owner": "SYSADMIN"}, "columns": {"FILE_HANDLE_ID": {"type": "NUMBER", "index": 1, "name": "FILE_HANDLE_ID", "comment": "The unique identifier of the file handle (ID). Primary key for this table."}, "CHANGE_TYPE": {"type": "TEXT", "index": 2, "name": "CHANGE_TYPE", "comment": "The type of change that occurred on the file handle, e.g., CREATE, UPDATE, DELETE."}, "CHANGE_USER_ID": {"type": "NUMBER", "index": 3, "name": "CHANGE_USER_ID", "comment": "The unique identifier of the user who made the change to the file handle."}, "CREATED_BY_USER_ID": {"type": "NUMBER", "index": 4, "name": "CREATED_BY_USER_ID", "comment": "The unique identifier of the user who created the file handle."}, "CREATED_ON": {"type": "TIMESTAMP_NTZ", "index": 5, "name": "CREATED_ON", "comment": "The creation timestamp of the file handle."}, "MODIFIED_ON": {"type": "TIMESTAMP_NTZ", "index": 6, "name": "MODIFIED_ON", "comment": "The most recent change time of the file handle."}, "CONCRETE_TYPE": {"type": "TEXT", "index": 7, "name": "CONCRETE_TYPE", "comment": "The type of the file handle (S3FileHandle, ProxyFileHandle, ExternalFileHandle, ExternalObjectStoreFileHandle, GoogleCloudFileHandle)."}, "CONTENT_MD5": {"type": "TEXT", "index": 8, "name": "CONTENT_MD5", "comment": "The MD5 hash (using MD5 algorithm) of the file referenced by the file handle."}, "CONTENT_TYPE": {"type": "TEXT", "index": 9, "name": "CONTENT_TYPE", "comment": "Metadata about the content of the file, e.g., application/json, application/zip, application/octet-stream."}, "FILE_NAME": {"type": "TEXT", "index": 10, "name": "FILE_NAME", "comment": "The name of the file referenced by the file handle."}, "STORAGE_LOCATION_ID": {"type": "NUMBER", "index": 11, "name": "STORAGE_LOCATION_ID", "comment": "The identifier of the environment where the physical files are stored."}, "CONTENT_SIZE": {"type": "NUMBER", "index": 12, "name": "CONTENT_SIZE", "comment": "The size of the file referenced by the file handle."}, "BUCKET": {"type": "TEXT", "index": 13, "name": "BUCKET", "comment": "The bucket where the file is physically stored (applicable for S3 and GCP, otherwise empty)."}, "KEY": {"type": "TEXT", "index": 14, "name": "KEY", "comment": "The key name that uniquely identifies the object (file) in the bucket."}, "PREVIEW_FILE_HANDLE_ID": {"type": "NUMBER", "index": 15, "name": "PREVIEW_FILE_HANDLE_ID", "comment": "The identifier of the file handle that contains a preview of the file referenced by this file handle."}, "IS_PREVIEW": {"type": "BOOLEAN", "index": 16, "name": "IS_PREVIEW", "comment": "If true, the file referenced by this file handle is a preview of another file."}, "STATUS": {"type": "TEXT", "index": 17, "name": "STATUS", "comment": "The availability status of the file referenced by the file handle (AVAILABLE, UNLINKED, ARCHIVED)."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 36057088, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 409257, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:31UTC", "include": true, "description": "The timestamp for last update/change"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "model.synapse.int_files_filtered_to_latest"}, "model.synapse.int_users_filtered_to_latest": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_LATEST", "name": "INT_USERS_FILTERED_TO_LATEST", "database": "DBT_TEST", "comment": "This table contains snapshots of user-profiles. Snapshots are taken when user profiles are created or modified. Note: Snapshots are also taken periodically and independently of the changes. The snapshot_timestamp records when the snapshot was taken.", "owner": "SYSADMIN"}, "columns": {"CHANGE_TYPE": {"type": "TEXT", "index": 1, "name": "CHANGE_TYPE", "comment": "The type of change that occurred to the user profile, e.g., CREATE, UPDATE (Snapshotting does not capture DELETE change)."}, "CHANGE_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 2, "name": "CHANGE_TIMESTAMP", "comment": "The time when any change to the user profile was made (e.g. create or update)."}, "CHANGE_USER_ID": {"type": "NUMBER", "index": 3, "name": "CHANGE_USER_ID", "comment": "The unique identifier of the user who made the change to the user profile."}, "USER_ID": {"type": "NUMBER", "index": 4, "name": "USER_ID", "comment": "The unique identifier of the user."}, "USER_NAME": {"type": "TEXT", "index": 5, "name": "USER_NAME", "comment": "The Synapse username."}, "FIRST_NAME": {"type": "TEXT", "index": 6, "name": "FIRST_NAME", "comment": "The first name of the user."}, "LAST_NAME": {"type": "TEXT", "index": 7, "name": "LAST_NAME", "comment": "The last name of the user."}, "EMAIL": {"type": "TEXT", "index": 8, "name": "EMAIL", "comment": "The primary email of the user."}, "LOCATION": {"type": "TEXT", "index": 9, "name": "LOCATION", "comment": "The location of the user."}, "COMPANY": {"type": "TEXT", "index": 10, "name": "COMPANY", "comment": "The company where the user works."}, "POSITION": {"type": "TEXT", "index": 11, "name": "POSITION", "comment": "The position of the user in the company."}, "CREATED_ON": {"type": "TIMESTAMP_NTZ", "index": 12, "name": "CREATED_ON", "comment": "The creation time of the user profile."}, "IS_TWO_FACTOR_AUTH_ENABLED": {"type": "BOOLEAN", "index": 13, "name": "IS_TWO_FACTOR_AUTH_ENABLED", "comment": "Indicates if the user had two factor authentication enabled when the snapshot was captured."}, "INDUSTRY": {"type": "TEXT", "index": 14, "name": "INDUSTRY", "comment": "The industry/discipline that this person is associated with."}, "TOS_AGREEMENTS_AGREEON_TIME": {"type": "TIMESTAMP_NTZ", "index": 15, "name": "TOS_AGREEMENTS_AGREEON_TIME", "comment": "Contains the latest term of service agreed on date and version."}, "TOS_AGREEMENTS_AGREEON_VERSION": {"type": "TEXT", "index": 16, "name": "TOS_AGREEMENTS_AGREEON_VERSION", "comment": "Contains the latest term of service agreed on version."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 11429376, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 171756, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:31UTC", "include": true, "description": "The timestamp for last update/change"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "model.synapse.int_users_filtered_to_latest"}}, "sources": {"source.synapse.synapse_data_warehouse.PROJECTSETTINGSNAPSHOTS": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "PROJECTSETTINGSNAPSHOTS", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "This table contains snapshots of projects settings. Snapshots are taken when a project setting is created, updated or deleted. Note: Snapshots are also taken periodically and independently of the changes. The snapshot_timestamp records when the snapshot was taken.", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"CHANGE_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 1, "name": "CHANGE_TIMESTAMP", "comment": "The time when the a project settings change (created/updated/deleted) occured."}, "CHANGE_TYPE": {"type": "TEXT", "index": 2, "name": "CHANGE_TYPE", "comment": "The type of change that occurred on the access requirement, e.g., CREATE, UPDATE, DELETE."}, "CHANGE_USER_ID": {"type": "NUMBER", "index": 3, "name": "CHANGE_USER_ID", "comment": "The id of the user that created, updated or deleted the project settings being snapshotted."}, "SNAPSHOT_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 4, "name": "SNAPSHOT_TIMESTAMP", "comment": "The time when the snapshot was taken. Snapshots are taken after each change event and periodically."}, "ID": {"type": "NUMBER", "index": 5, "name": "ID", "comment": "The unique identifier of the project setting."}, "CONCRETE_TYPE": {"type": "TEXT", "index": 6, "name": "CONCRETE_TYPE", "comment": "The type of project settings. See https://rest-docs.synapse.org/rest/org/sagebionetworks/repo/model/ProjectSettings.html."}, "PROJECT_ID": {"type": "NUMBER", "index": 7, "name": "PROJECT_ID", "comment": "The ID of the project to which the settings apply."}, "SETTINGS_TYPE": {"type": "TEXT", "index": 8, "name": "SETTINGS_TYPE", "comment": "The short type of the project settings. See https://rest-docs.synapse.org/rest/org/sagebionetworks/repo/model/ProjectSettings.html."}, "ETAG": {"type": "TEXT", "index": 9, "name": "ETAG", "comment": "UUID issued each time the project settings changes."}, "LOCATIONS": {"type": "ARRAY", "index": 10, "name": "LOCATIONS", "comment": "The storage location IDs associated with the project setting."}, "SNAPSHOT_DATE": {"type": "DATE", "index": 11, "name": "SNAPSHOT_DATE", "comment": "The data is partitioned for fast and cost effective queries. The snapshot_timestamp field is converted into a date and stored in the snapshot_date field for partitioning. The date should be used as a condition (WHERE CLAUSE) in the queries."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 6150144, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 126863, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:02UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(SNAPSHOT_DATE)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.PROJECTSETTINGSNAPSHOTS"}, "source.synapse.synapse_data_warehouse.ACLSNAPSHOTS": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "ACLSNAPSHOTS", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "This table contain snapshots of access-control-list. Snapshots are taken when an acl is created, updated or deleted. Note: Snapshots are also taken periodically and independently of the changes. The snapshot_timestamp records when the snapshot was taken.", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"CHANGE_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 1, "name": "CHANGE_TIMESTAMP", "comment": "The time when the change (created/updated/deleted) on an acl is pushed to the queue for snapshotting."}, "CHANGE_TYPE": {"type": "TEXT", "index": 2, "name": "CHANGE_TYPE", "comment": "The type of change that occurred on the acl, e.g., CREATE, UPDATE, DELETE."}, "SNAPSHOT_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 3, "name": "SNAPSHOT_TIMESTAMP", "comment": "The time when the snapshot was taken (It is usually after the change happened)."}, "OWNER_ID": {"type": "NUMBER", "index": 4, "name": "OWNER_ID", "comment": "The unique identifier of the Synapse object to which the acl is applied."}, "OWNER_TYPE": {"type": "TEXT", "index": 5, "name": "OWNER_TYPE", "comment": "The type of the Synapse object that the acl is affecting, .e.g., ENTITY, FILE, SUBMISSION, MESSAGE, TEAM."}, "CREATED_ON": {"type": "TIMESTAMP_NTZ", "index": 6, "name": "CREATED_ON", "comment": "The creation time of the acl."}, "RESOURCE_ACCESS": {"type": "TEXT", "index": 7, "name": "RESOURCE_ACCESS", "comment": "The list of principals (users or teams) along with the permissions the principal is granted on the object to which the acl is applied."}, "SNAPSHOT_DATE": {"type": "DATE", "index": 8, "name": "SNAPSHOT_DATE", "comment": "The data is partitioned for fast and cost effective queries. The snapshot_timestamp field is converted into a date and stored in the snapshot_date field for partitioning. The date should be used as a condition (WHERE CLAUSE) in the queries."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 522596352, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 18210863, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:02UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(snapshot_date)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.ACLSNAPSHOTS"}, "source.synapse.synapse_data_warehouse.CERTIFIEDQUIZQUESTIONSNAPSHOTS": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "CERTIFIEDQUIZQUESTIONSNAPSHOTS", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "This table contain snapshots of the questions of the certification quiz. With each entry representing a question answered by the user during the quiz.", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"CHANGE_TYPE": {"type": "TEXT", "index": 1, "name": "CHANGE_TYPE", "comment": "The change type is always as CREATE since each instance of a user submitting a quiz results in a new submission of the quiz."}, "CHANGE_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 2, "name": "CHANGE_TIMESTAMP", "comment": "The time when the user submitted the quiz."}, "CHANGE_USER_ID": {"type": "NUMBER", "index": 3, "name": "CHANGE_USER_ID", "comment": "The unique identifier of the user that submitted the quiz."}, "SNAPSHOT_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 4, "name": "SNAPSHOT_TIMESTAMP", "comment": "The time when the snapshot was taken (It is usually after the change happened)."}, "RESPONSE_ID": {"type": "NUMBER", "index": 5, "name": "RESPONSE_ID", "comment": "The unique identifier of a response wherein a user submitted a set of answers while participating in the quiz."}, "QUESTION_INDEX": {"type": "NUMBER", "index": 6, "name": "QUESTION_INDEX", "comment": "The position of the question within the quiz."}, "IS_CORRECT": {"type": "BOOLEAN", "index": 7, "name": "IS_CORRECT", "comment": "If true, the answer to the question was correct."}, "STACK": {"type": "TEXT", "index": 8, "name": "STACK", "comment": "The stack (prod, dev) on which the quiz question record was processed."}, "INSTANCE": {"type": "TEXT", "index": 9, "name": "INSTANCE", "comment": "The version of the stack that processed the quiz question record."}, "SNAPSHOT_DATE": {"type": "DATE", "index": 10, "name": "SNAPSHOT_DATE", "comment": "The data is partitioned for fast and cost effective queries. The snapshot_timestamp field is converted into a date and stored in the snapshot_date field for partitioning. The date should be used as a condition (WHERE CLAUSE) in the queries."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 736656896, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 80230378, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:02UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(snapshot_date)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.CERTIFIEDQUIZQUESTIONSNAPSHOTS"}, "source.synapse.synapse_data_warehouse.CERTIFIEDQUIZSNAPSHOTS": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "CERTIFIEDQUIZSNAPSHOTS", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "This table contain snapshots of the certification quiz submitted by a Synapse user. Snapshots are taken when a user submit the quiz. Note: Snapshots are also taken periodically and independently of the changes. The snapshot_timestamp records when the snapshot was taken.", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"CHANGE_TYPE": {"type": "TEXT", "index": 1, "name": "CHANGE_TYPE", "comment": "The change type is always as CREATE since each instance of a user submitting a quiz results in a new submission of the quiz."}, "CHANGE_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 2, "name": "CHANGE_TIMESTAMP", "comment": "The latest time when the change message was sent to the queue for snapshotting."}, "SNAPSHOT_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 3, "name": "SNAPSHOT_TIMESTAMP", "comment": "The time when the snapshot was taken (It is usually after the change happened)."}, "RESPONSE_ID": {"type": "NUMBER", "index": 4, "name": "RESPONSE_ID", "comment": "The unique identifier of a response wherein a user submitted a set of answers while participating in the quiz."}, "USER_ID": {"type": "NUMBER", "index": 5, "name": "USER_ID", "comment": "The unique identifier of the user who submitted the quiz."}, "PASSED": {"type": "BOOLEAN", "index": 6, "name": "PASSED", "comment": "If true, the user passed the quiz."}, "PASSED_ON": {"type": "TIMESTAMP_NTZ", "index": 7, "name": "PASSED_ON", "comment": "The date on which the user submit the quiz, regardless of whether user passed or failed the test."}, "STACK": {"type": "TEXT", "index": 8, "name": "STACK", "comment": "The stack (prod, dev) on which the quiz record was processed."}, "INSTANCE": {"type": "TEXT", "index": 9, "name": "INSTANCE", "comment": "The version of the stack that processed the quiz record."}, "SNAPSHOT_DATE": {"type": "DATE", "index": 10, "name": "SNAPSHOT_DATE", "comment": null}, "REVOKED": {"type": "BOOLEAN", "index": 15, "name": "REVOKED", "comment": "If true, the record was revoked by an ACT member."}, "REVOKED_ON": {"type": "TIMESTAMP_NTZ", "index": 16, "name": "REVOKED_ON", "comment": "The date/time when the record was revoked, can be null if the record was never revoked."}, "CERTIFIED": {"type": "BOOLEAN", "index": 17, "name": "CERTIFIED", "comment": "If true the user is certified through this record, can be true iif passed is true and revoked is false."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 78242816, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 3578916, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:09UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(snapshot_date)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.CERTIFIEDQUIZSNAPSHOTS"}, "source.synapse.synapse_data_warehouse.FILEUPLOAD": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "FILEUPLOAD", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "This table contains upload records for FileEntity (e.g. a new file creation, upload or update to an existing file) and TableEntity (e.g. an appended row set to an existing table, uploaded file to an existing table). The events are recorded only after the file or change to a table is successfully uploaded.", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 1, "name": "TIMESTAMP", "comment": "PRIMARY KEY (Composite). The time when the upload event is pushed to the queue, after a successful upload of a file or change in the existing table."}, "USER_ID": {"type": "NUMBER", "index": 2, "name": "USER_ID", "comment": "PRIMARY KEY (Composite). The id of the user who requested the upload."}, "PROJECT_ID": {"type": "NUMBER", "index": 3, "name": "PROJECT_ID", "comment": "The unique identifier of the project where the uploaded entity resides. Applicable only for FileEntity and TableEntity."}, "FILE_HANDLE_ID": {"type": "NUMBER", "index": 4, "name": "FILE_HANDLE_ID", "comment": "PRIMARY KEY (Composite). The unique identifier of the file handle."}, "ASSOCIATION_OBJECT_ID": {"type": "NUMBER", "index": 5, "name": "ASSOCIATION_OBJECT_ID", "comment": "The unique identifier of the related FileEntity or TableEntity (without the ``syn`` prefix)."}, "ASSOCIATION_OBJECT_TYPE": {"type": "TEXT", "index": 6, "name": "ASSOCIATION_OBJECT_TYPE", "comment": "The type of Synapse object that wraps the file, e.g., FileEntity, TableEntity."}, "STACK": {"type": "TEXT", "index": 7, "name": "STACK", "comment": "The stack (prod, dev) on which the upload request was processed."}, "INSTANCE": {"type": "TEXT", "index": 8, "name": "INSTANCE", "comment": "The version of the stack that processed the upload request."}, "RECORD_DATE": {"type": "DATE", "index": 9, "name": "RECORD_DATE", "comment": "The data is partitioned for fast and cost effective queries. The timestamp field is converted into a date and stored in the record_date field for partitioning. The date should be used as a condition (WHERE CLAUSE) in the queries."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 700537344, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 65000549, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:02UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(record_date)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.FILEUPLOAD"}, "source.synapse.synapse_data_warehouse.USERGROUPSNAPSHOTS": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "USERGROUPSNAPSHOTS", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "This table lists all principals (individual users and groups of users). (A group is the low-level object of a underlying team, much like a file handle is the low-level object of an underlying file entity.) In addition to explicit users and teams, principals in Synapse include the anonymous user, the implicit group of all authenticated users, and the implicit public group which includes all users, authenticated or not. Note: Snapshots are also taken periodically and independently of the changes. The snapshot_timestamp records when the snapshot was taken.", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"CHANGE_TYPE": {"type": "TEXT", "index": 1, "name": "CHANGE_TYPE", "comment": "The type of change that occurred to the user-group, e.g., CREATE, UPDATE (Snapshotting does not capture DELETE change)."}, "CHANGE_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 2, "name": "CHANGE_TIMESTAMP", "comment": "The time when the change (creation/update) to the user-group is pushed to the queue for snapshotting."}, "CHANGE_USER_ID": {"type": "NUMBER", "index": 3, "name": "CHANGE_USER_ID", "comment": "The unique identifier of the user who made the change to the user-group."}, "SNAPSHOT_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 4, "name": "SNAPSHOT_TIMESTAMP", "comment": "The time when the snapshot was taken (It is usually after the change happened)."}, "ID": {"type": "NUMBER", "index": 5, "name": "ID", "comment": "The unique identifier of user or group."}, "IS_INDIVIDUAL": {"type": "BOOLEAN", "index": 6, "name": "IS_INDIVIDUAL", "comment": "If true, then this user group is an individual user not a team."}, "CREATED_ON": {"type": "TIMESTAMP_NTZ", "index": 7, "name": "CREATED_ON", "comment": "The creation time of the user or group."}, "SNAPSHOT_DATE": {"type": "DATE", "index": 8, "name": "SNAPSHOT_DATE", "comment": "The data is partitioned for fast and cost effective queries. The snapshot_timestamp field is converted into a date and stored in the snapshot_date field for partitioning. The date should be used as a condition (WHERE CLAUSE) in the queries."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 551933952, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 32284765, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:02UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(snapshot_date)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.USERGROUPSNAPSHOTS"}, "source.synapse.synapse_data_warehouse.FILEDOWNLOAD": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "FILEDOWNLOAD", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "The table contain records of all the downloads of the Synapse, e.g., file, zip/package, attachments. The events are recorded only after the pre-signed url for requested download entity is generated.", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 1, "name": "TIMESTAMP", "comment": "The time when the file download event is pushed to the queue for recording, after generating the pre-signed url."}, "USER_ID": {"type": "NUMBER", "index": 2, "name": "USER_ID", "comment": "The id of the user who downloaded the file."}, "PROJECT_ID": {"type": "NUMBER", "index": 3, "name": "PROJECT_ID", "comment": "The unique identifier of the project where the downloaded entity resides. Applicable only for FileEntity and TableEntity."}, "FILE_HANDLE_ID": {"type": "NUMBER", "index": 4, "name": "FILE_HANDLE_ID", "comment": "The unique identifier of the file handle."}, "DOWNLOADED_FILE_HANDLE_ID": {"type": "NUMBER", "index": 5, "name": "DOWNLOADED_FILE_HANDLE_ID", "comment": "The unique identifier of the zip file handle containing the downloaded file when the download is requested as zip/package, otherwise the id of the file handle itself."}, "ASSOCIATION_OBJECT_ID": {"type": "NUMBER", "index": 6, "name": "ASSOCIATION_OBJECT_ID", "comment": "The unique identifier of the Synapse object (without 'syn' prefix) that wraps the file."}, "ASSOCIATION_OBJECT_TYPE": {"type": "TEXT", "index": 7, "name": "ASSOCIATION_OBJECT_TYPE", "comment": "The type of the Synapse object that wraps the file, e.g., FileEntity, TableEntity, WikiAttachment, WikiMarkdown, UserProfileAttachment, MessageAttachment, TeamAttachment."}, "STACK": {"type": "TEXT", "index": 8, "name": "STACK", "comment": "The stack (prod, dev) on which the download request was processed."}, "INSTANCE": {"type": "TEXT", "index": 9, "name": "INSTANCE", "comment": "The version of the stack that processed the download request."}, "RECORD_DATE": {"type": "DATE", "index": 10, "name": "RECORD_DATE", "comment": "The data is partitioned for fast and cost effective queries. The timestamp field is converted into a date and stored in the record_date field for partitioning. The date should be used as a condition (WHERE CLAUSE) in the queries."}, "SESSION_ID": {"type": "TEXT", "index": 15, "name": "SESSION_ID", "comment": "The UUID assigned to the API request that triggered this download.  By joining this table with the processedaccessrecord on session_id, more information about the call that triggered this download can be found."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 14641079296, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 543313440, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:02UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(record_date)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.FILEDOWNLOAD"}, "source.synapse.synapse_data_warehouse.ACCESSREQUIREMENTSNAPSHOTS": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "ACCESSREQUIREMENTSNAPSHOTS", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "This table contain snapshots of access requirements. Snapshots are taken when an access requirement is created, updated or deleted. Note: Snapshots are also taken periodically and independently of the changes. The snapshot_timestamp records when the snapshot was taken.", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"CHANGE_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 1, "name": "CHANGE_TIMESTAMP", "comment": "The time when the change (created/updated/deleted) on an access requirement is pushed to the queue for snapshotting."}, "CHANGE_TYPE": {"type": "TEXT", "index": 2, "name": "CHANGE_TYPE", "comment": "The type of change that occurred on the access requirement, e.g., CREATE, UPDATE, DELETE."}, "CHANGE_USER_ID": {"type": "NUMBER", "index": 3, "name": "CHANGE_USER_ID", "comment": "The id of the user that created, updated or deleted the access requirement being snapshotted"}, "SNAPSHOT_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 4, "name": "SNAPSHOT_TIMESTAMP", "comment": "The time when the snapshot was taken (It is usually after the change happened)."}, "ID": {"type": "NUMBER", "index": 5, "name": "ID", "comment": "The unique identifier of the access requirement."}, "VERSION_NUMBER": {"type": "NUMBER", "index": 6, "name": "VERSION_NUMBER", "comment": "The version of the access requirement. Each time an access requirement is updated a new version is issued."}, "NAME": {"type": "TEXT", "index": 7, "name": "NAME", "comment": "The name assigned to the access requirement."}, "DESCRIPTION": {"type": "TEXT", "index": 8, "name": "DESCRIPTION", "comment": "The description assigned to the access requirement."}, "CREATED_BY": {"type": "NUMBER", "index": 9, "name": "CREATED_BY", "comment": "The id of the user that created the access requirement."}, "MODIFIED_BY": {"type": "NUMBER", "index": 10, "name": "MODIFIED_BY", "comment": "The id of the user that modified the access requirement."}, "CREATED_ON": {"type": "TIMESTAMP_NTZ", "index": 11, "name": "CREATED_ON", "comment": "The creation time of the access requirement."}, "MODIFIED_ON": {"type": "TIMESTAMP_NTZ", "index": 12, "name": "MODIFIED_ON", "comment": "The most recent change time of the access requirement."}, "ACCESS_TYPE": {"type": "TEXT", "index": 13, "name": "ACCESS_TYPE", "comment": "The type of access this access requirement applies to, currently supports only DOWNLOAD (for entities) and PARTICIPATE (for teams)."}, "CONCRETE_TYPE": {"type": "TEXT", "index": 14, "name": "CONCRETE_TYPE", "comment": "The type of access requirement. See https://rest-docs.synapse.org/rest/org/sagebionetworks/repo/model/AccessRequirement.html."}, "SUBJECTS_DEFINED_BY_ANNOTATIONS": {"type": "BOOLEAN", "index": 15, "name": "SUBJECTS_DEFINED_BY_ANNOTATIONS", "comment": "True if the subjects of the access requirement are automatically inferred by derived annotations. If true the subjectIds will be empty."}, "SUBJECTS_IDS": {"type": "ARRAY", "index": 16, "name": "SUBJECTS_IDS", "comment": "The list of objects controlled by this access requirement. If the access_type is DOWNLOAD each element will be an ENTITY, If the access_type is PARTICIPATE each element will be a TEAM. This list is empty if subjects_defined_by_annotations is true."}, "IS_CERTIFIED_USER_REQUIRED": {"type": "BOOLEAN", "index": 17, "name": "IS_CERTIFIED_USER_REQUIRED", "comment": "True if the user certification is required to fulfill the access requirement. Applies only to ManagedACTAccessRequirement and SelfSignAccessRequirement."}, "IS_VALIDATED_PROFILE_REQUIRED": {"type": "BOOLEAN", "index": 18, "name": "IS_VALIDATED_PROFILE_REQUIRED", "comment": "True if the profile validation is required to fulfill the access requirement. Applies only to ManagedACTAccessRequirement and SelfSignAccessRequirement."}, "IS_DUC_REQUIRED": {"type": "BOOLEAN", "index": 19, "name": "IS_DUC_REQUIRED", "comment": "True if a Data Use Certificate (DUC) is required to fulfill the access requirement. Applies only to ManagedACTAccessRequirement."}, "IS_IRB_APPROVAL_REQUIRED": {"type": "BOOLEAN", "index": 20, "name": "IS_IRB_APPROVAL_REQUIRED", "comment": "True if an Institutional Review Board (IRB) approval document is required to fulfill the access requirement. Applies only to ManagedACTAccessRequirement."}, "ARE_OTHER_ATTACHMENTS_REQUIRED": {"type": "BOOLEAN", "index": 21, "name": "ARE_OTHER_ATTACHMENTS_REQUIRED", "comment": "True if additional attachment(s) are required to fulfill the access requirement. Applies only to ManagedACTAccessRequirement."}, "IS_IDU_PUBLIC": {"type": "BOOLEAN", "index": 22, "name": "IS_IDU_PUBLIC", "comment": "True if the Intended Data Use Statements submitted to gain access to the data will be presented to public. Applies only to ManagedACTAccessRequirement."}, "IS_IDU_REQUIRED": {"type": "BOOLEAN", "index": 23, "name": "IS_IDU_REQUIRED", "comment": "True the Intended Data Use Statement for a research project is required to fulfill the access requirement. Applies only to ManagedACTAccessRequirement."}, "IS_TWO_FA_REQUIRED": {"type": "BOOLEAN", "index": 24, "name": "IS_TWO_FA_REQUIRED", "comment": "True if two factor authentication is required to fulfill the access requirement. Applies only to ManagedACTAccessRequirement."}, "DUC_TEMPLATE_FILE_HANDLE_ID": {"type": "NUMBER", "index": 25, "name": "DUC_TEMPLATE_FILE_HANDLE_ID", "comment": "The id of the file handle containing the DUC template (if a DUC is required) that needs to be filled and signed by users to fulfill the access requirement. Applies only to ManagedACTAccessRequirement."}, "EXPIRATION_PERIOD": {"type": "NUMBER", "index": 26, "name": "EXPIRATION_PERIOD", "comment": "The amount in milliseconds that an approval of this access requirement is valid for. Applies only to ManagedACTAccessRequirement."}, "TERMS_OF_USER": {"type": "TEXT", "index": 27, "name": "TERMS_OF_USER", "comment": "The terms of use text. Applies only to TermsOfUseAccessRequirement."}, "ACT_CONTACT_INFO": {"type": "TEXT", "index": 28, "name": "ACT_CONTACT_INFO", "comment": "Information on how to contact the Synapse ACT for access approval (external to Synapse). Applies only to ACTAccessRequirement."}, "OPEN_JIRA_ISSUE": {"type": "BOOLEAN", "index": 29, "name": "OPEN_JIRA_ISSUE", "comment": "Flag that indicate if a JIRA issue needs to be opened in addition to follow the act_contact_info . Applies only to ACTAccessRequirement."}, "JIRA_KEY": {"type": "TEXT", "index": 30, "name": "JIRA_KEY", "comment": "The key of the jira issue created for this Access Requirement. Applies only to LockAccessRequirement."}, "SNAPSHOT_DATE": {"type": "DATE", "index": 31, "name": "SNAPSHOT_DATE", "comment": "The data is partitioned for fast and cost effective queries. The snapshot_timestamp field is converted into a date and stored in the snapshot_date field for partitioning. The date should be used as a condition (WHERE CLAUSE) in the queries."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 51014656, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 929916, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:02UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(SNAPSHOT_DATE)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.ACCESSREQUIREMENTSNAPSHOTS"}, "source.synapse.synapse_data_warehouse.USERPROFILESNAPSHOT": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "USERPROFILESNAPSHOT", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "This table contain snapshots of user-profiles. Snapshots are taken when user profiles are created or modified. Note: Snapshots are also taken periodically and independently of the changes. The snapshot_timestamp records when the snapshot was taken.", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"CHANGE_TYPE": {"type": "TEXT", "index": 1, "name": "CHANGE_TYPE", "comment": "The type of change that occurred to the user profile, e.g., CREATE, UPDATE (Snapshotting does not capture DELETE change)."}, "CHANGE_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 2, "name": "CHANGE_TIMESTAMP", "comment": "The time when any change to the user profile was made (e.g. create or update)."}, "CHANGE_USER_ID": {"type": "NUMBER", "index": 3, "name": "CHANGE_USER_ID", "comment": "The unique identifier of the user who made the change to the user profile."}, "SNAPSHOT_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 4, "name": "SNAPSHOT_TIMESTAMP", "comment": "The time when the snapshot was taken (It is usually after the change happened)."}, "ID": {"type": "NUMBER", "index": 5, "name": "ID", "comment": "The unique identifier of the user."}, "USER_NAME": {"type": "TEXT", "index": 6, "name": "USER_NAME", "comment": "The Synapse username."}, "FIRST_NAME": {"type": "TEXT", "index": 7, "name": "FIRST_NAME", "comment": "The first name of the user."}, "LAST_NAME": {"type": "TEXT", "index": 8, "name": "LAST_NAME", "comment": "The last name of the user."}, "EMAIL": {"type": "TEXT", "index": 9, "name": "EMAIL", "comment": "The primary email of the user."}, "LOCATION": {"type": "TEXT", "index": 10, "name": "LOCATION", "comment": "The location of the user."}, "COMPANY": {"type": "TEXT", "index": 11, "name": "COMPANY", "comment": "The company where the user works."}, "POSITION": {"type": "TEXT", "index": 12, "name": "POSITION", "comment": "The position of the user in the company."}, "SNAPSHOT_DATE": {"type": "DATE", "index": 13, "name": "SNAPSHOT_DATE", "comment": "The data is partitioned for fast and cost effective queries. The snapshot_timestamp field is converted into a date and stored in the snapshot_date field for partitioning. The date should be used as a condition (WHERE CLAUSE) in the queries."}, "CREATED_ON": {"type": "TIMESTAMP_NTZ", "index": 18, "name": "CREATED_ON", "comment": "The creation time of the user profile."}, "IS_TWO_FACTOR_AUTH_ENABLED": {"type": "BOOLEAN", "index": 19, "name": "IS_TWO_FACTOR_AUTH_ENABLED", "comment": "Indicates if the user had two factor authentication enabled when the snapshot was captured."}, "INDUSTRY": {"type": "TEXT", "index": 20, "name": "INDUSTRY", "comment": "The industry/discipline that this person is associated with."}, "TOS_AGREEMENTS": {"type": "VARIANT", "index": 21, "name": "TOS_AGREEMENTS", "comment": "Contains the list of all the term of service that the user agreed to, with their agreed on date and version."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 1113491456, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 21559985, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:02UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(snapshot_date)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.USERPROFILESNAPSHOT"}, "source.synapse.synapse_data_warehouse.TEAMSNAPSHOTS": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "TEAMSNAPSHOTS", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "This table contain snapshots of teams. Snapshots are taken when teams or its members are created or updated. Note: Snapshots are also taken periodically and independently of the changes. The snapshot_timestamp records when the snapshot was taken.", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"CHANGE_TYPE": {"type": "TEXT", "index": 1, "name": "CHANGE_TYPE", "comment": "The type of change that occurred to the team, e.g., CREATE, UPDATE (Snapshotting does not capture DELETE change)."}, "CHANGE_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 2, "name": "CHANGE_TIMESTAMP", "comment": "The time when any change to the team was made (e.g. create, update or a change to its members)."}, "CHANGE_USER_ID": {"type": "NUMBER", "index": 3, "name": "CHANGE_USER_ID", "comment": "The unique identifier of the user who made the change to the team."}, "SNAPSHOT_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 4, "name": "SNAPSHOT_TIMESTAMP", "comment": "The time when the snapshot was taken (It is usually after the change happened)."}, "ID": {"type": "NUMBER", "index": 5, "name": "ID", "comment": "The unique identifier of the team."}, "NAME": {"type": "TEXT", "index": 6, "name": "NAME", "comment": "The name of the team."}, "CAN_PUBLIC_JOIN": {"type": "BOOLEAN", "index": 7, "name": "CAN_PUBLIC_JOIN", "comment": "If true, a user can join the team without approval of a team manager."}, "CREATED_ON": {"type": "TIMESTAMP_NTZ", "index": 8, "name": "CREATED_ON", "comment": "The creation time of the team."}, "CREATED_BY": {"type": "NUMBER", "index": 9, "name": "CREATED_BY", "comment": "The unique identifier of the user who created the team."}, "MODIFIED_ON": {"type": "TIMESTAMP_NTZ", "index": 10, "name": "MODIFIED_ON", "comment": "The time when the team was last modified."}, "MODIFIED_BY": {"type": "NUMBER", "index": 11, "name": "MODIFIED_BY", "comment": "The unique identifier of the user who last modified the team."}, "SNAPSHOT_DATE": {"type": "DATE", "index": 12, "name": "SNAPSHOT_DATE", "comment": "The data is partitioned for fast and cost effective queries. The snapshot_timestamp field is converted into a date and stored in the snapshot_date field for partitioning. The date should be used as a condition (WHERE CLAUSE) in the queries."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 48601600, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 1521182, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:02UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(snapshot_date)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.TEAMSNAPSHOTS"}, "source.synapse.synapse_data_warehouse.VERIFICATIONSUBMISSIONSNAPSHOTS": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "VERIFICATIONSUBMISSIONSNAPSHOTS", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "This table contain snapshots of submissions of user verification data by ACT. Snapshots are taken when a submission is created or updated. Note: Snapshots are also taken periodically and independently of the changes. The snapshot_timestamp records when the snapshot was taken.", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"CHANGE_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 1, "name": "CHANGE_TIMESTAMP", "comment": "The time when the change (created/updated) on a submission is pushed to the queue for snapshotting."}, "CHANGE_TYPE": {"type": "TEXT", "index": 2, "name": "CHANGE_TYPE", "comment": "The type of change that occurred on the submission, e.g., CREATE, UPDATE."}, "SNAPSHOT_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 3, "name": "SNAPSHOT_TIMESTAMP", "comment": "The time when the snapshot was taken (It is usually after the change happened)."}, "ID": {"type": "NUMBER", "index": 4, "name": "ID", "comment": "The unique identifier of the submission."}, "CREATED_ON": {"type": "TIMESTAMP_NTZ", "index": 5, "name": "CREATED_ON", "comment": "The creation time of the submission."}, "CREATED_BY": {"type": "NUMBER", "index": 6, "name": "CREATED_BY", "comment": "The unique identifier of the user who, created the submission"}, "STATE_HISTORY": {"type": "TEXT", "index": 7, "name": "STATE_HISTORY", "comment": "The sequence of submission states (SUBMITTED, REJECTED, APPROVED) for the submission."}, "SNAPSHOT_DATE": {"type": "DATE", "index": 8, "name": "SNAPSHOT_DATE", "comment": "The data is partitioned for fast and cost effective queries. The snapshot_timestamp field is converted into a date and stored in the snapshot_date field for partitioning. The date should be used as a condition (WHERE CLAUSE) in the queries."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 41963520, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 650030, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:09UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(snapshot_date)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.VERIFICATIONSUBMISSIONSNAPSHOTS"}, "source.synapse.synapse_data_warehouse.FILEINVENTORY": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "FILEINVENTORY", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "This table contains the S3 inventory of the main synapse bucket, the inventory is a snapshot taken weekly. For more information see https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-inventory.html.", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"BUCKET": {"type": "TEXT", "index": 1, "name": "BUCKET", "comment": "The object bucket"}, "E_TAG": {"type": "TEXT", "index": 2, "name": "E_TAG", "comment": "The entity tag (ETag) is a hash of the object. The ETag reflects changes only to the contents of an object, not to its metadata. The ETag can be an MD5 digest of the object data. Whether it is depends on how the object was created and how it is encrypted."}, "ENCRYPTION_STATUS": {"type": "TEXT", "index": 3, "name": "ENCRYPTION_STATUS", "comment": "The server-side encryption status, depending on what kind of encryption key is used\u2014an Amazon S3 managed (SSE-S3) key, an AWS Key Management Service (AWS KMS) key (SSE-KMS), or a customer-provided key (SSE-C). Set to SSE-S3, SSE-C, SSE-KMS, or NOT-SSE. A status of NOT-SSE means that the object is not encrypted with server-side encryption. For more information, see Protecting data with encryption."}, "INTELLIGENT_TIERING_ACCESS_TIER": {"type": "TEXT", "index": 4, "name": "INTELLIGENT_TIERING_ACCESS_TIER", "comment": "Access tier (frequent or infrequent) of the object if it is stored in the S3 Intelligent-Tiering storage class. See https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-class-intro.html#sc-dynamic-data-access"}, "IS_DELETE_MARKER": {"type": "BOOLEAN", "index": 5, "name": "IS_DELETE_MARKER", "comment": "Set to True if the object is a delete marker"}, "IS_LATEST": {"type": "BOOLEAN", "index": 6, "name": "IS_LATEST", "comment": "Set to True if the object is the current version of the object"}, "IS_MULTIPART_UPLOADED": {"type": "BOOLEAN", "index": 7, "name": "IS_MULTIPART_UPLOADED", "comment": "Set to True if the object was uploaded as a multipart upload"}, "KEY": {"type": "TEXT", "index": 8, "name": "KEY", "comment": "The object key name (or key) that uniquely identifies the object in the bucket"}, "LAST_MODIFIED_DATE": {"type": "TIMESTAMP_NTZ", "index": 9, "name": "LAST_MODIFIED_DATE", "comment": "The object creation date or the last modified date, whichever is the latest."}, "OBJECT_OWNER": {"type": "TEXT", "index": 10, "name": "OBJECT_OWNER", "comment": "The owner of the object"}, "SIZE": {"type": "NUMBER", "index": 11, "name": "SIZE", "comment": "The object size in bytes, not including the size of incomplete multipart uploads, object metadata, and delete markers"}, "STORAGE_CLASS": {"type": "TEXT", "index": 12, "name": "STORAGE_CLASS", "comment": "The storage class that is used for storing the object. See https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-class-intro.html"}, "SNAPSHOT_DATE": {"type": "DATE", "index": 13, "name": "SNAPSHOT_DATE", "comment": "An inventory snapshot is taken on a weekly cadence, the data is partitioned by the snapshot date"}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 325325810176, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 5868012994, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:05UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(snapshot_date)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.FILEINVENTORY"}, "source.synapse.synapse_data_warehouse.TEAMMEMBERSNAPSHOTS": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "TEAMMEMBERSNAPSHOTS", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "This table contain snapshots of team-members. Snapshots are captured when a team and/or its members are modified. Note: Snapshots are also taken periodically and independently of the changes. The snapshot_timestamp records when the snapshot was taken.", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"CHANGE_TYPE": {"type": "TEXT", "index": 1, "name": "CHANGE_TYPE", "comment": "The type of change that occurred to the member of team, e.g., CREATE, UPDATE (Snapshotting does not capture DELETE change)."}, "CHANGE_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 2, "name": "CHANGE_TIMESTAMP", "comment": "The time when any change to the team was made (e.g. update of the team or a change to its members)."}, "CHANGE_USER_ID": {"type": "NUMBER", "index": 3, "name": "CHANGE_USER_ID", "comment": "The unique identifier of the user who made the change to the team member."}, "SNAPSHOT_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 4, "name": "SNAPSHOT_TIMESTAMP", "comment": "The time when the snapshot was taken (It is usually after the change happened)."}, "TEAM_ID": {"type": "NUMBER", "index": 5, "name": "TEAM_ID", "comment": "The unique identifier of the team."}, "MEMBER_ID": {"type": "NUMBER", "index": 6, "name": "MEMBER_ID", "comment": "The unique identifier of the member of the team. The member is a Synapse user."}, "IS_ADMIN": {"type": "BOOLEAN", "index": 7, "name": "IS_ADMIN", "comment": "If true, then the member is manager of the team."}, "SNAPSHOT_DATE": {"type": "DATE", "index": 8, "name": "SNAPSHOT_DATE", "comment": "The data is partitioned for fast and cost effective queries. The snapshot_timestamp field is converted into a date and stored in the snapshot_date field for partitioning. The date should be used as a condition (WHERE CLAUSE) in the queries."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 1259527168, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 234069022, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:02UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(snapshot_date)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.TEAMMEMBERSNAPSHOTS"}, "source.synapse.synapse_data_warehouse.nodesnapshots": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "NODESNAPSHOTS", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "This table contain snapshots of nodes (Nodes are project, file, folders...). Snapshots are taken when nodes are created, updated or deleted. Note: Snapshots are also taken periodically and independently of the changes. The snapshot_timestamp is the time when the snapshot was taken.", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"CHANGE_TYPE": {"type": "TEXT", "index": 1, "name": "CHANGE_TYPE", "comment": "The type of change that occurred on the node, e.g., CREATE, UPDATE, DELETE."}, "CHANGE_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 2, "name": "CHANGE_TIMESTAMP", "comment": "The time when the change (created/updated/deleted) on the node is pushed to the queue for snapshotting."}, "CHANGE_USER_ID": {"type": "NUMBER", "index": 3, "name": "CHANGE_USER_ID", "comment": "The unique identifier of the user who made the change to the node."}, "SNAPSHOT_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 4, "name": "SNAPSHOT_TIMESTAMP", "comment": "The time when the snapshot was taken. (It is usually after the change happened)."}, "ID": {"type": "NUMBER", "index": 5, "name": "ID", "comment": "The unique identifier of the node."}, "BENEFACTOR_ID": {"type": "NUMBER", "index": 6, "name": "BENEFACTOR_ID", "comment": "The identifier of the (ancestor) node which provides the permissions that apply to this node. Can be the id of the node itself."}, "PROJECT_ID": {"type": "NUMBER", "index": 7, "name": "PROJECT_ID", "comment": "The project where the node resides. It will be empty for the change type DELETE."}, "PARENT_ID": {"type": "NUMBER", "index": 8, "name": "PARENT_ID", "comment": "The unique identifier of the parent in the node hierarchy."}, "NODE_TYPE": {"type": "TEXT", "index": 9, "name": "NODE_TYPE", "comment": "The type of the node. Allowed node types are : project, folder, file, table, link, entityview, dockerrepo, submissionview, dataset, datasetcollection, materializedview, virtualtable."}, "CREATED_ON": {"type": "TIMESTAMP_NTZ", "index": 10, "name": "CREATED_ON", "comment": "The creation time of the node."}, "CREATED_BY": {"type": "NUMBER", "index": 11, "name": "CREATED_BY", "comment": "The unique identifier of the user who created the node."}, "MODIFIED_ON": {"type": "TIMESTAMP_NTZ", "index": 12, "name": "MODIFIED_ON", "comment": "The most recent change time of the node."}, "MODIFIED_BY": {"type": "NUMBER", "index": 13, "name": "MODIFIED_BY", "comment": "The unique identifier of the user who last modified the node."}, "VERSION_NUMBER": {"type": "NUMBER", "index": 14, "name": "VERSION_NUMBER", "comment": "The version of the node on which the change occurred, if applicable."}, "FILE_HANDLE_ID": {"type": "NUMBER", "index": 15, "name": "FILE_HANDLE_ID", "comment": "The unique identifier of the file handle if the node is a file, null otherwise."}, "NAME": {"type": "TEXT", "index": 16, "name": "NAME", "comment": "The name of the node."}, "IS_PUBLIC": {"type": "BOOLEAN", "index": 17, "name": "IS_PUBLIC", "comment": "If true, READ permission is granted to all the Synapse users, including the anonymous user, at the time of the snapshot."}, "IS_CONTROLLED": {"type": "BOOLEAN", "index": 18, "name": "IS_CONTROLLED", "comment": "If true, an access requirement managed by the ACT is set on the node."}, "IS_RESTRICTED": {"type": "BOOLEAN", "index": 19, "name": "IS_RESTRICTED", "comment": "If true, a terms-of-use access requirement is set on the node."}, "SNAPSHOT_DATE": {"type": "DATE", "index": 20, "name": "SNAPSHOT_DATE", "comment": "The data is partitioned for fast and cost effective queries. The snapshot_timestamp field is converted into a date and stored in the snapshot_date field for partitioning. The date should be used as a condition (WHERE CLAUSE) in the queries."}, "EFFECTIVE_ARS": {"type": "VARIANT", "index": 25, "name": "EFFECTIVE_ARS", "comment": "The list of access requirement ids that apply to the entity at the time the snapshot was taken."}, "ANNOTATIONS": {"type": "VARIANT", "index": 26, "name": "ANNOTATIONS", "comment": "The json representation of the entity annotations assigned by the user."}, "DERIVED_ANNOTATIONS": {"type": "VARIANT", "index": 27, "name": "DERIVED_ANNOTATIONS", "comment": "The json representation of the entity annotations that were derived by the schema of the entity."}, "VERSION_COMMENT": {"type": "TEXT", "index": 28, "name": "VERSION_COMMENT", "comment": "A short description assigned to this node version."}, "VERSION_LABEL": {"type": "TEXT", "index": 29, "name": "VERSION_LABEL", "comment": "A short label assigned to this node version."}, "ALIAS": {"type": "TEXT", "index": 30, "name": "ALIAS", "comment": "An alias assigned to a project entity if present."}, "ACTIVITY_ID": {"type": "NUMBER", "index": 31, "name": "ACTIVITY_ID", "comment": "The reference to the id of an activity assigned to the node."}, "COLUMN_MODEL_IDS": {"type": "VARIANT", "index": 32, "name": "COLUMN_MODEL_IDS", "comment": "For entities that define a table schema (e.g. table, views etc), the list of column ids assigned to the schema."}, "SCOPE_IDS": {"type": "VARIANT", "index": 33, "name": "SCOPE_IDS", "comment": "For entities that define a scope (e.g. entity views, subsmission views etc), the list of entity ids included in the scope."}, "ITEMS": {"type": "VARIANT", "index": 34, "name": "ITEMS", "comment": "For entities that define a fixed list of entity references (e.g. dataset, dataset collections), the list of entity references included in the scope."}, "REFERENCE": {"type": "VARIANT", "index": 35, "name": "REFERENCE", "comment": "For Link entities, the reference to the linked target."}, "IS_SEARCH_ENABLED": {"type": "BOOLEAN", "index": 36, "name": "IS_SEARCH_ENABLED", "comment": "For Table like entities (e.g. EntityView, MaterializedView etc), defines if full text search is enabled on those entities."}, "DEFINING_SQL": {"type": "TEXT", "index": 37, "name": "DEFINING_SQL", "comment": "For tables that are driven by a synapse SQL query (e.g. MaterializedView, VirtualTable), defines the underlying SQL query."}, "INTERNAL_ANNOTATIONS": {"type": "VARIANT", "index": 38, "name": "INTERNAL_ANNOTATIONS", "comment": "The json representation of the entity internal annotations that are used to store additional data about different types of entity (e.g. dataset checksum, size, count)."}, "VERSION_HISTORY": {"type": "VARIANT", "index": 39, "name": "VERSION_HISTORY", "comment": "The list of entity versions, at the time of the snapshot."}, "PROJECT_STORAGE_USAGE": {"type": "VARIANT", "index": 40, "name": "PROJECT_STORAGE_USAGE", "comment": "Nodes of type project include the project storage usage data for each storage location in the project."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 338312716800, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 5929597569, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:02UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(snapshot_date)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.nodesnapshots"}, "source.synapse.synapse_data_warehouse.PROCESSEDACCESS": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "PROCESSEDACCESS", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "The table contains access records. Each record reflects a single API request received by the Synapse server. The recorded data is useful for audits and to analyse API performance such as delays, errors or success rates.", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"SESSION_ID": {"type": "TEXT", "index": 1, "name": "SESSION_ID", "comment": "A unique identifier that the Synapse server assigns for the duration of a session. Sessions are linked to a user, an API key or a token."}, "TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 2, "name": "TIMESTAMP", "comment": "The timestamp when the user sends a request to the Synapse server."}, "USER_ID": {"type": "NUMBER", "index": 3, "name": "USER_ID", "comment": "The unique identifier of the Synapse user."}, "METHOD": {"type": "TEXT", "index": 4, "name": "METHOD", "comment": "The http method of the request."}, "REQUEST_URL": {"type": "TEXT", "index": 5, "name": "REQUEST_URL", "comment": "The URL of the request."}, "USER_AGENT": {"type": "TEXT", "index": 6, "name": "USER_AGENT", "comment": "The User-Agent header from the http request. See: https://en.wikipedia.org/wiki/User-Agent_header"}, "HOST": {"type": "TEXT", "index": 7, "name": "HOST", "comment": "The IP address of the host that made the request."}, "ORIGIN": {"type": "TEXT", "index": 8, "name": "ORIGIN", "comment": "The host name of the portal making the request, e.g., https://staging.synapse.org, https://adknowledgeportal.synapse.org, https://dhealth.synapse.org."}, "X_FORWARDED_FOR": {"type": "TEXT", "index": 9, "name": "X_FORWARDED_FOR", "comment": "The HTTP header x_forwarded_for contains the IP address of the user connecting through a proxy. See: https://en.wikipedia.org/wiki/X-Forwarded-For"}, "VIA": {"type": "TEXT", "index": 10, "name": "VIA", "comment": "The HTTP header Via, informs the server of proxies through which the request was sent."}, "THREAD_ID": {"type": "NUMBER", "index": 11, "name": "THREAD_ID", "comment": "The unique identifier of the thread in which the request was processed."}, "ELAPSE_MS": {"type": "NUMBER", "index": 12, "name": "ELAPSE_MS", "comment": "The total time of processing the user request in milliseconds."}, "SUCCESS": {"type": "BOOLEAN", "index": 13, "name": "SUCCESS", "comment": "Indicates if the user request succeeded (true) or failed (false)."}, "STACK": {"type": "TEXT", "index": 14, "name": "STACK", "comment": "The stack (prod, dev) on which the request was processed."}, "INSTANCE": {"type": "TEXT", "index": 15, "name": "INSTANCE", "comment": "The version of the stack that processed the request."}, "VM_ID": {"type": "TEXT", "index": 16, "name": "VM_ID", "comment": "The unique identifier of the Synapse ec2 server in the cluster that processed the request."}, "RETURN_OBJECT_ID": {"type": "TEXT", "index": 17, "name": "RETURN_OBJECT_ID", "comment": "The Synapse object identifier which is returned to the user in response body of a GET, PUT or POST API, if available."}, "QUERY_STRING": {"type": "TEXT", "index": 18, "name": "QUERY_STRING", "comment": "The set of characters tacked onto the end of a URL after the question mark (?)."}, "RESPONSE_STATUS": {"type": "NUMBER", "index": 19, "name": "RESPONSE_STATUS", "comment": "The response code for the request, e.g., 200, 401, 500. See: https://en.wikipedia.org/wiki/List_of_HTTP_status_codes"}, "OAUTH_CLIENT_ID": {"type": "TEXT", "index": 20, "name": "OAUTH_CLIENT_ID", "comment": "The unique identifier of the oauth client used in the request. It will be empty when the request is not made by an OAuth client."}, "BASIC_AUTH_USERNAME": {"type": "TEXT", "index": 21, "name": "BASIC_AUTH_USERNAME", "comment": "The name of the user who made the request using BASIC authentication method. It will be empty otherwise."}, "AUTH_METHOD": {"type": "TEXT", "index": 22, "name": "AUTH_METHOD", "comment": "The authentication method used by the client. Currently BEARERTOKEN, SESSIONTOKEN, BASIC, APIKEY methods are supported."}, "NORMALIZED_METHOD_SIGNATURE": {"type": "TEXT", "index": 23, "name": "NORMALIZED_METHOD_SIGNATURE", "comment": "This is the http method followed by a simplified version of the request url (with all IDs extracted)."}, "CLIENT": {"type": "TEXT", "index": 24, "name": "CLIENT", "comment": "The is an alias of the user agent, e.g., WEB, JAVA, PYTHON."}, "CLIENT_VERSION": {"type": "TEXT", "index": 25, "name": "CLIENT_VERSION", "comment": "The version of the client used to make the request."}, "ENTITY_ID": {"type": "NUMBER", "index": 26, "name": "ENTITY_ID", "comment": "The Synapse object identifier sent by the user in the request url, if any."}, "RECORD_DATE": {"type": "DATE", "index": 27, "name": "RECORD_DATE", "comment": "The data is partitioned for fast and cost effective queries. The timestamp field is converted into a date and stored in the record_date field for partitioning. The date should be used as a condition (WHERE CLAUSE) in the queries."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 402248034816, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 10008498269, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:03UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(record_date)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.PROCESSEDACCESS"}, "source.synapse.synapse_data_warehouse.FILESNAPSHOTS": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "FILESNAPSHOTS", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "This table contain snapshots of file handles. Snapshots are taken when file handles are created, updated or deleted. Note: Snapshots are also taken periodically and independently of the changes. The snapshot_timestamp records when the snapshot was taken.", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"CHANGE_TYPE": {"type": "TEXT", "index": 1, "name": "CHANGE_TYPE", "comment": "The type of change that occurred on the file handle, e.g., CREATE, UPDATE, DELETE."}, "CHANGE_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 2, "name": "CHANGE_TIMESTAMP", "comment": "The time when the change (created/updated/deleted) on the file is pushed to the queue for snapshotting."}, "CHANGE_USER_ID": {"type": "NUMBER", "index": 3, "name": "CHANGE_USER_ID", "comment": "The unique identifier of the user who made the change to the file."}, "SNAPSHOT_TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 4, "name": "SNAPSHOT_TIMESTAMP", "comment": "The time when the snapshot was taken (It is usually after the change happened)."}, "ID": {"type": "NUMBER", "index": 5, "name": "ID", "comment": "The unique identifier of the file handle."}, "CREATED_BY": {"type": "NUMBER", "index": 6, "name": "CREATED_BY", "comment": "The unique identifier of the user who created the file handle."}, "CREATED_ON": {"type": "TIMESTAMP_NTZ", "index": 7, "name": "CREATED_ON", "comment": "The creation timestamp of the file handle."}, "MODIFIED_ON": {"type": "TIMESTAMP_NTZ", "index": 8, "name": "MODIFIED_ON", "comment": "The most recent change time of the file handle."}, "CONCRETE_TYPE": {"type": "TEXT", "index": 9, "name": "CONCRETE_TYPE", "comment": "The type of the file handle. Allowed file handles are: S3FileHandle, ProxyFileHandle, ExternalFileHandle, ExternalObjectStoreFileHandle, GoogleCloudFileHandle."}, "CONTENT_MD5": {"type": "TEXT", "index": 10, "name": "CONTENT_MD5", "comment": "The md5 hash (using MD5 algorithm) of the file referenced by the file handle."}, "CONTENT_TYPE": {"type": "TEXT", "index": 11, "name": "CONTENT_TYPE", "comment": "Metadata about the content of the file, e.g., application/json, application/zip, application/octet-stream."}, "FILE_NAME": {"type": "TEXT", "index": 12, "name": "FILE_NAME", "comment": "The name of the file referenced by the file handle."}, "STORAGE_LOCATION_ID": {"type": "NUMBER", "index": 13, "name": "STORAGE_LOCATION_ID", "comment": "The identifier of the environment, where the physical files are stored."}, "CONTENT_SIZE": {"type": "NUMBER", "index": 14, "name": "CONTENT_SIZE", "comment": "The size of the file referenced by the file handle."}, "BUCKET": {"type": "TEXT", "index": 15, "name": "BUCKET", "comment": "The bucket where the file is physically stored. Applicable for s3 and GCP, otherwise empty."}, "KEY": {"type": "TEXT", "index": 16, "name": "KEY", "comment": "The key name uniquely identifies the object (file) in the bucket."}, "PREVIEW_ID": {"type": "NUMBER", "index": 17, "name": "PREVIEW_ID", "comment": "The identifier of the file handle that contains a preview of the file referenced by this file handle."}, "IS_PREVIEW": {"type": "BOOLEAN", "index": 18, "name": "IS_PREVIEW", "comment": "If true, the file referenced by this file handle is a preview of another file"}, "STATUS": {"type": "TEXT", "index": 19, "name": "STATUS", "comment": "The availability status of the file referenced by the file handle. AVAILABLE:  accessible via Synapse; UNLINKED: not referenced by Synapse and therefore available for garbage collection; ARCHIVED: the file has been garbage collected."}, "SNAPSHOT_DATE": {"type": "DATE", "index": 20, "name": "SNAPSHOT_DATE", "comment": "The data is partitioned for fast and cost effective queries. The snapshot_timestamp field is converted into a date and stored in the snapshot_date field for partitioning. The date should be used as a condition (WHERE CLAUSE) in the queries."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 987404973568, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 15849507166, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:02UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(snapshot_date)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.FILESNAPSHOTS"}, "source.synapse.synapse_data_warehouse.FILEHANDLEASSOCIATIONSNAPSHOTS": {"metadata": {"type": "BASE TABLE", "schema": "SYNAPSE_RAW", "name": "FILEHANDLEASSOCIATIONSNAPSHOTS", "database": "SYNAPSE_DATA_WAREHOUSE", "comment": "The table contains file handle association records that are weekly scanned. A FileHandleAssociation record is a FileHandle (identified by its id) along with a Synapse object (identified by its id and type).", "owner": "SYNAPSE_RAW_ALL_ADMIN"}, "columns": {"ASSOCIATEID": {"type": "NUMBER", "index": 1, "name": "ASSOCIATEID", "comment": "The unique identifier of the Synapse object that wraps the file."}, "ASSOCIATETYPE": {"type": "TEXT", "index": 2, "name": "ASSOCIATETYPE", "comment": "The type of the Synapse object that wraps the file."}, "FILEHANDLEID": {"type": "NUMBER", "index": 3, "name": "FILEHANDLEID", "comment": "The unique identifier of the file handle."}, "INSTANCE": {"type": "TEXT", "index": 4, "name": "INSTANCE", "comment": "The version of the stack that processed the file association."}, "STACK": {"type": "TEXT", "index": 5, "name": "STACK", "comment": "The stack (prod, dev) on which the file handle association processed."}, "TIMESTAMP": {"type": "TIMESTAMP_NTZ", "index": 6, "name": "TIMESTAMP", "comment": "The time when the association data was collected."}}, "stats": {"bytes": {"id": "bytes", "label": "Approximate Size", "value": 108426534912, "include": true, "description": "Approximate size of the table as reported by Snowflake"}, "row_count": {"id": "row_count", "label": "Row Count", "value": 24441657559, "include": true, "description": "An approximate count of rows in this table"}, "last_modified": {"id": "last_modified", "label": "Last Modified", "value": "2025-09-22 06:03UTC", "include": true, "description": "The timestamp for last update/change"}, "clustering_key": {"id": "clustering_key", "label": "Clustering Key", "value": "LINEAR(instance)", "include": true, "description": "The key used to cluster this table"}, "has_stats": {"id": "has_stats", "label": "Has Stats?", "value": true, "include": false, "description": "Indicates whether there are statistics for this table"}}, "unique_id": "source.synapse.synapse_data_warehouse.FILEHANDLEASSOCIATIONSNAPSHOTS"}}, "errors": null}